---
services:
  github-mcp:
    build: .
    container_name: mcp-github
    stdin_open: true
    tty: true
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
    restart: unless-stopped
    command: ["node", "/usr/local/lib/node_modules/@modelcontextprotocol/server-github/dist/index.js"]
    networks:
      - mcp-network

  datetime-validator:
    build: .
    container_name: mcp-datetime
    # セキュリティ: 動的UID/GID設定（書き込み権限確保 + Root昇格防止）
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    volumes:
      - ~/workspace:/workspace:ro  # セキュリティ: 読み取り専用
      - ./output:/output:rw         # セキュリティ: 書き込みは制限された領域のみ
    restart: unless-stopped
    command:
      - python
      - services/datetime/datetime_validator.py
      - --directory
      - /workspace
    networks:
      - mcp-network
    # セキュリティ: リソース制限
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    # セキュリティ: 特権無効化
    privileged: false
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE  # 必要最小限の権限のみ

  actions-simulator:
    build: .
    container_name: mcp-actions-simulator
    volumes:
      - ./.github:/app/.github:ro      # ワークフローファイル（読み取り専用）
      - ./output:/app/output:rw        # 実行結果出力
      - act-cache:/opt/act/cache
      - /var/run/docker.sock:/var/run/docker.sock  # Dockerアクセス（act用）
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST=0.0.0.0
      - PORT=8000
    profiles:
      - tools
    command: ["bash", "-c", "uv run python main.py actions --help"]
    networks:
      - mcp-network
    # セキュリティ: リソース制限
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    # セキュリティ: 最小権限
    privileged: false
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

networks:
  mcp-network:
    driver: bridge

volumes:
  act-cache:
