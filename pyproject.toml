[project]
name = "mcp-docker"
version = "1.3.0"
description = "Model Context Protocol (MCP) servers in production-ready Docker environment"
authors = [{name = "MCP Docker Team"}]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.13"
dependencies = [
    "pyyaml>=6.0.2",
    "click>=8.1.0",
    "rich>=13.0.0",
    "docker>=6.1.0",
    "fastapi>=0.117.1",
    "uvicorn[standard]>=0.37.0",
    "httpx>=0.28.1",
    "watchdog>=6.0.0",
    "psutil>=5.9.0",
    "python-multipart>=0.0.6",
    "pytest>=8.4.2",
    # GitHub Release Watcher dependencies
    "aiohttp>=3.9.0",
    "cachetools>=5.3.0",
    "packaging>=23.0",
    "python-dotenv>=1.0.0",
    "win10toast>=0.9; sys_platform == 'win32'",
    "pync>=2.0.3; sys_platform == 'darwin'",
    "plyer>=2.1.0; sys_platform == 'linux'",
    # MCP GitHub Actions dependencies
    "mcp>=1.0.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
]
keywords = ["mcp", "docker", "model-context-protocol", "ai", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "yamllint>=1.37.1",
    "ruff>=0.6.9",
    "pytest-timeout>=2.4.0",
    "mypy>=1.8.0",
    "bandit>=1.7.5",
    "types-pyyaml>=6.0.12",
    "types-psutil>=6.0.0",
    "pytest-asyncio>=1.2.0",
    "toml>=0.10.2",
    "pytest>=7.4.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    # Batsは外部ツールなので、インストール用のMakefileターゲットで管理
]

[project.urls]
Homepage = "https://github.com/scottlz0310/mcp-docker"
Repository = "https://github.com/scottlz0310/mcp-docker"
Issues = "https://github.com/scottlz0310/mcp-docker/issues"
Changelog = "https://github.com/scottlz0310/mcp-docker/blob/main/CHANGELOG.md"

[project.scripts]
mcp-docker = "cli:main"
bats = "scripts.run_bats:main"
security-scan = "scripts.run_security_scan:main"
mcp-github-actions = "src.mcp_github_actions.server:main"

[[tool.uv.index]]
url = "https://pkgs.safetycli.com/repository/public/pypi/simple/"
default = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["services", "src", "scripts"]

[tool.hatch.build.targets.wheel.force-include]
"main.py" = "main.py"
"cli.py" = "cli.py"

[tool.ruff]
line-length = 120
exclude = [
    "archive/",
]

[tool.ruff.format]
line-ending = "lf"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_decorators = false
disallow_any_generics = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "archive.*",
    "scripts.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "win10toast",
    "pync",
    "plyer",
    "docker",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "-n=logical",
    "--timeout=30",
    "--timeout-method=thread",
]
markers = [
    "unit: ユニットテスト（外部依存なし）",
    "integration: 統合テスト（Docker等の外部依存あり）",
    "e2e: エンドツーエンドテスト（完全なシナリオ）",
    "slow: 実行時間が長いテスト（Dockerビルド含む、タイムアウト600s）",
    "asyncio: 非同期テスト",
    "legacy_actions: 旧Actions Simulator経路に依存するテスト（移行対象）",
]
timeout_func_only = true
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
